stages:
  - lint
  - test
  - deploy

flake8:
  stage: lint
  image: python:3.9-alpine
  before_script:
   - pip install -q flake8
  script:
   - flake8

  # Change pip's cache directory to be inside the project directory since we can
  # only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  # Pip's cache doesn't store the python packages
  # https://pip.pypa.io/en/stable/reference/pip_install/#caching
  #
  # If you want to also cache the installed packages, you have to install
  # them in a virtualenv and cache it as well.
cache:
  key: a-fixed-name
  paths:
    - .cache/pip
    - venv/

pytest_3_9:
  stage: test
  image: python:3.9
  variables:
    DATABASE_URL2: 'sqlite:////test_db.sqlite3'


  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements/local.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py check

  script:
    - pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml


pytest_3_10_coverage:
  stage: test
  image: python:3.10

  variables:
    DATABASE_URL2: 'sqlite:////test_db.sqlite3'

  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements/local.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py check
  script:
    - pytest --junitxml=report.xml
    - pip install pytest pytest-cov
    - coverage run -m pytest 
    - coverage report
    - coverage xml
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

deploy:
  stage: deploy
  only:
    - master
  image: python:3.10
  tags:
    - planthub
 # image: ubuntu:latest
  before_script:
    - apt-get update -qq
    #- apt-get install -qq git
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # - npm install
  script:
    # - ping iknow.inf-bb.uni-jena.de
    #- ssh-add <(echo "$SSH_PRIVATE_KEY")
    #- npm run build
    - ssh deploy@iknow.inf-bb.uni-jena.de "cd /var/www/PlantHub/planthub && git config --global --add safe.directory /var/www/PlantHub/planthub &&  git pull  https://gitlab-ci-token:${CI_JOB_TOKEN}@git.uni-jena.de/fusion/project/planthub/planthub-website-backend.git && cd .. && source venv/bin/activate && cd planthub && pip install -r requirements/production.txt && python manage.py migrate && python manage.py collectstatic --noinput && touch config/wsgi.py"
    #- scp -P22 -r build/* deploy@iknow.inf-bb.uni-jena.de:/var/www/html
